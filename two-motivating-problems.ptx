<section xml:id="section-two-motivating-problems">
  <title>Two Motivating Problems</title>
  <subsection xml:id="subsection-velocity-problem">
    <title>The Velocity Problem</title>
    <figure xml:id="figure-slope-linear">
      <caption>Slope of a Linear Function</caption>
      <image xml:id="figure10" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$t$");
          yaxis("$p$");

          real f(real x) {return x/3;}

          draw(graph(f,0,8));

          draw((6,2)--(6,1)--(3,1));

          label("$\Delta p$",(6,1.5),E);
          label("$\Delta t$",(4.5,1),S);
          label("$a = \frac{\Delta p}{\Delta t}$",(4.5,1.5),NW);
          label("$p=at$", (8,8/3),E);
        </asymptote>
      </image>
    </figure>
    <p>
      So far, in <xref ref="section-population-growth" /> and
      elsewhere in the course, I've relied heavily on biological
      examples. In this section, I'm going to instead rely on physics.
      Coming from physics, the velocity problem is one of the basic
      motivating problems of calculus. Assume there is an object
      moving in one dimension. I can describe its position as a
      function <m>p(t)</m> where <m>p</m> is position in terms of time
      <m>t</m>. I want to know its velocity.
    </p>
    <p>
      If <m>p(t) = at + b</m> is a linear function, then algebra can
      answer this question. With this linear function, for each unit
      of time the object travels <m>a</m> units of distance. The value
      <m>a</m> is the velocity. Geometrically, the velocity is
      measured by the slope of the straight line graph of <m>p(t)</m>.
      The slope is calculated by the ratio of the change in <m>p</m>,
      <m>\Delta p</m>, to the change in <m>t</m>, <m>\Delta t</m>.
    </p>
    <p>
      If slope is the way to measure velocity, then I need a notion
      of slope for non-linear functions as well. The notion comes
      from the idea of tangent lines. A tangent line to a graph is a
      line which touches the graph at one point without crossing it
      (as opposed to a secant line, which crosses the graph twice).
    </p>
    <figure xml:id="figure-tangent-line">
      <caption>A Tangent Line</caption>
      <image xml:id="figure11" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$x$");
          yaxis("$y$");

          real f1(real x) {return (x^3-x^2+x+1)/8;}
          real f2(real x) {return 3/8*x - 11/76;}

          draw(graph(f1,0,2.2));
          draw(graph(f2,0,3));
        </asymptote>
      </image>
    </figure>
    <figure xml:id="figure-secant-line">
      <caption>A Secant Line</caption>
      <image xml:id="figure12" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$x$");
          yaxis("$y$");

          real f1(real x) {return (x^3-x^2+x+1)/8;}
          real f2(real x) {return 3/8*x;}

          draw(graph(f1,0,2.2));
          draw(graph(f2,0,3));
        </asymptote>
      </image>
    </figure>
    <p>
      The slope of a graph is defined to be the slope of its tangent
      line, should such a line exist. The velocity problem is reduced
      to the problem of finding the tangent line (or, more
      particularly, its slope). How do I calculate a tangent line?
      Algebra has trouble with this. The best that algebra can
      do is find secant lines which approximate a tangent line. I can
      adjust the approximation by letting the two points of the secant
      line come closer and closer together, as in the <xref
      ref="figure-secant-approximations" />. In this way, I can build
      an approximation process which improves as I move the points.
      However, algebra an never finish the process <mdash /> it can
      just supply improved approximations.
    </p>
    <figure xml:id="figure-secant-approximations">
      <caption>Secant Approximations to the Tangent Line</caption>
      <image xml:id="figure13" width="85%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$x$");
          yaxis("$y$");
          
          real f1(real x) {return x^2;}

          draw(graph(f1,-1,2.1));

          draw((0,-1)--(3,5));
          draw((0,0)--(3,3));
          draw((0,-.25)--(3,3.5));
          draw((0,-.5)--(3,4));
          draw((0,-.75)--(3,4.5));

          label("5",(3,5),E);
          label("4",(3,4.5),E);
          label("3",(3,4),E);
          label("2",(3,3.5),E);
          label("1",(3,3),E);

          label("Slope of Line  1 = $\frac{f(1) - f(0)}{1-0} =
            1$",(4,1),E);
          label("Slope of Line  2 = $\frac{f(1) -
            f(1/4)}{1-\frac{1}{4}} = 5/4$",(4,2),E);
          label("Slope of Line  3 = $\frac{f(1) -
            f(1/2)}{1-\frac{1}{2}} = 3/2$",(4,3),E);
          label("Slope of Line  4 = $\frac{f(1) -
            f(3/4)}{1-\frac{3}{4}} = 7/4$",(4,4),E);
          label("Line  5 is tangent line with slope 2.",(4,5),E);
        </asymptote>
      </image>
    </figure>
  </subsection>
  <subsection xml:id="subsection-distance-problem">
    <title>The Distance Travelled Problem</title>
    <p>
      Now I will consider the opposite problem. Consider a function
      <m>v(t)</m> which tells me the velocity of an object at any
      point of time. How can I determine the distance the object has
      covered over a period of time?
    </p>
    <figure xml:id="figure-constant-velocity">
      <caption>Constant Velocity</caption>
      <image xml:id="figure14" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$t$");
          yaxis("$y$");

          draw((0,4)--(6,4)--(6,0));
          
          label("$v(t) = c$",(3,4),N);

          dot("$t=0$",(0,0),NE);
          dot("$t=t_0$",(6,0),NW);

          label("Area$= ct_0$",(2,2),E);
        </asymptote>
      </image>
    </figure>
    <figure xml:id="figure-non-constant-velocity">
      <caption>Non-Constant Velocity</caption>
      <image xml:id="figure15" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$x$");
          yaxis("$y$");

          draw((0,3){SE}..{E}(2,1.6){E}..{NE}(4,4){NE}..{SE}(6,3));
          draw((6,3)--(6,0));

          label("$v(t)$",(3,3),N);

          dot("$t=0$",(0,0),NE);
          dot("$t=t_0$",(6,0),NW);
          
          label("Area = Distance Travelled",(0.2,1),E);
        </asymptote>
      </image>
    </figure>
    <p>
      Again, algebra can only answer this question for very simple
      situations. Assume that the velocity <m>v(t) = c</m> is
      constant. In this case, if the constant velocity is <m>c</m>
      units of distance for each unit of time and the object has
      travelled for <m>t_0</m> units of time, the distance is just the
      product <m>ct_0</m>. Graphically, the situation is summarized in
      <xref ref="figure-constant-velocity" />.  The distance travelled
      under constant velocity is the area under the velocity graph, as
      in <xref ref="figure-non-constant-velocity" />.  I can extend
      this idea to non-constant velocity: the distance should be the
      area under the velocity graph.  Therefore, to solve the distance
      travelled problem, I need to find areas under curves. Like
      tangent lines, this is not a problem that algebra can easily
      tackle. However, it can approximate areas. Algebra is good at
      areas of rectangles, so I can use rectanges to approximate
      areas.
    </p>
    <figure xml:id="figure-approximation-by-rectangles">
      <caption>Approximation of Area by Rectangles</caption>
      <image xml:id="figure16" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$t$");
          yaxis("$y$");

          draw((0,3){SE}..{E}(2,1.6){E}..{NE}(4,4){NE}..{SE}(6,3));

          label("$v(t)$",(2.9,3.3),N);

          draw((0,2.6)--(1,2.6)--(1,0));
          draw((1,1.8)--(2,1.8));
          draw((2,0)--(2,1.9)--(3,1.9));
          draw((3,0)--(3,3.1)--(4,3.1));
          draw((4,0)--(4,4.2)--(5,4.2)--(5,0));
          draw((5,3.6)--(6,3.6)--(6,0));
        </asymptote>
      </image>
    </figure>
    <figure xml:id="figure-improved-approximation-by-rectangles">
      <caption>Improved Approximation with More Rectangles</caption>
      <image xml:id="figure17" width="60%">
        <asymptote>
          size(10cm);

          import graph;

          xaxis("$t$");
          yaxis("$y$");

          draw((0,3){SE}..{E}(2,1.6){E}..{NE}(4,4){NE}..{SE}(6,3));

          label("$v(t)$",(2.9,3.3),N);

          draw((0,2.8)--(0.5,2.8)--(0.5,0));
          draw((0.5,2.3)--(1,2.3)--(1,0));
          draw((1,1.8)--(1.5,1.8)--(1.5,0));
          draw((1.5,1.6)--(2,1.6));
          draw((2,0)--(2,1.7)--(2.5,1.7));
          draw((2.5,0)--(2.5,2.1)--(3,2.1));
          draw((3,0)--(3,2.6)--(3.5,2.6));
          draw((3.5,0)--(3.5,3.7)--(4,3.7));
          draw((4,0)--(4,4.2)--(4.5,4.2)--(4.5,0));
          draw((4.5,4.1)--(5,4.1)--(5,0));
          draw((5,3.7)--(5.5,3.7)--(5.5,0));
          draw((5.5,3.2)--(6,3.2)--(6,0));
        </asymptote>
      </image>
    </figure>
    <p>
      The sum of the areas of all the rectangles is a reasonable
      approximation to the area under the curve. If I want a better
      approximation, I can divide the area into smaller rectangles. In
      this way, I set up an approximation process to understand areas
      under curves. Algebra can never completely answer the question,
      but it can get better and better approximations by using more
      and more rectangles in its approximation.
    </p>
  </subsection>
</section>
